<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jackson on Geowarin</title><link>https://geowarin.github.io/tags/jackson/</link><description>Recent content in jackson on Geowarin</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 02 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://geowarin.github.io/tags/jackson/index.xml" rel="self" type="application/rss+xml"/><item><title>Correctly handle JSR-310 (java 8) dates with Jackson</title><link>https://geowarin.github.io/correctly-handle-jsr-310-java-8-dates-with-jackson/</link><pubDate>Tue, 02 Feb 2016 00:00:00 +0000</pubDate><guid>https://geowarin.github.io/correctly-handle-jsr-310-java-8-dates-with-jackson/</guid><description>If you are starting a Spring Boot project today, chances are that you want to use Java 8.
One of the most awesome features in Java 8 is the Date and Time API, also known as JSR-310.
By default, Jackson will treat the new dates as normal objects and serialize all the fields that they contain, which will probably not suit your needs.
I will show you how to fix the problem with the jackson-datatype-jsr310 library, within a Spring Boot project, but the concepts here are applicable to any application using Jackson.</description></item></channel></rss>