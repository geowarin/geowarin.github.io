<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dbUnit on Geowarin</title><link>https://geowarin.github.io/tags/dbunit/</link><description>Recent content in dbUnit on Geowarin</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 20 Jan 2013 16:28:23 +0000</lastBuildDate><atom:link href="https://geowarin.github.io/tags/dbunit/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Hibernate as a JPA provider in a Java SE environment and run tests with dbUnit</title><link>https://geowarin.github.io/using-hibernate-as-a-jpa-provider-in-a-java-se-environment-and-run-tests-with-dbunit/</link><pubDate>Sun, 20 Jan 2013 16:28:23 +0000</pubDate><guid>https://geowarin.github.io/using-hibernate-as-a-jpa-provider-in-a-java-se-environment-and-run-tests-with-dbunit/</guid><description>Sometimes it can be useful to use JPA in a minimal environment to test your model or just if you&amp;rsquo;re curious of how things work in your DAO layer behind the scenes. In this blog post, we will create a simple project then see how you can use dbUnit to run some unit tests on your database.
The source code of this blog post is available on my github : https://github.</description></item></channel></rss>