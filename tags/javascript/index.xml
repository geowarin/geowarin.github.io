<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>javascript on Geowarin</title><link>https://geowarin.github.io/tags/javascript/</link><description>Recent content in javascript on Geowarin</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 23 Dec 2019 01:20:59 +0100</lastBuildDate><atom:link href="https://geowarin.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Run your frontend alongside spring boot</title><link>https://geowarin.github.io/run-your-frontend-alongside-spring-boot/</link><pubDate>Mon, 23 Dec 2019 01:20:59 +0100</pubDate><guid>https://geowarin.github.io/run-your-frontend-alongside-spring-boot/</guid><description>Assumptions:
Your backend serves the API (REST, graphQL) You build your javascript with a separate bundler (parcel, webpack) Your frontend uses a push state (HTML 5 history) router You want hot module reloading (HMR) for the best developer experience TLDR; The github repository shows four different solutions.
1. CORS The most obvious solution is to set up the backend to allow Cross-Origin Resource Sharing (CORS) with the frontend, which runs on the development web server.</description></item><item><title>Spring Boot and React hot loader</title><link>https://geowarin.github.io/spring-boot-and-react-hot-loader/</link><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid>https://geowarin.github.io/spring-boot-and-react-hot-loader/</guid><description>When I develop web applications, I love using React. I&amp;rsquo;m also a Spring and groovy addict.
Those two stacks make me more productive. Can we have the best of both worlds?
I will show you step by step how I created this project. Feel free to fiddle with it and give me your feedback.
Goal My perfect stack on the backend is to use Spring boot and groovy. With the latest version of Spring boot, there is a new tool called dev-tools that will automatically reload the embedded server when you recompile your project.</description></item></channel></rss>