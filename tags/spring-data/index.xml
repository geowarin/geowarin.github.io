<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>spring-data on Geowarin</title><link>https://geowarin.github.io/tags/spring-data/</link><description>Recent content in spring-data on Geowarin</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 21 Jan 2013 15:25:11 +0000</lastBuildDate><atom:link href="https://geowarin.github.io/tags/spring-data/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Spring Data JPA in a Java SE environment and run tests with dbUnit</title><link>https://geowarin.github.io/using-spring-data-jpa-in-a-java-se-environment-and-run-tests-with-dbunit/</link><pubDate>Mon, 21 Jan 2013 15:25:11 +0000</pubDate><guid>https://geowarin.github.io/using-spring-data-jpa-in-a-java-se-environment-and-run-tests-with-dbunit/</guid><description>This blog post follows my previous articles on using hibernate as a standalone JPA provider and how to use spring in a Java SE environment.
In this post, I will show you how to use Spring Data JPA, a great project which improves your productivity by generating all CRUD operations for you. Then we will use springtestdbunit to run some very clean tests on our database with spring and dbUnit.</description></item></channel></rss>