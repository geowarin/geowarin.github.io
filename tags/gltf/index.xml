<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>GLTF on Geowarin</title><link>https://geowarin.com/tags/gltf/</link><description>Recent content in GLTF on Geowarin</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 16 Nov 2021 00:44:59 +0100</lastBuildDate><atom:link href="https://geowarin.com/tags/gltf/index.xml" rel="self" type="application/rss+xml"/><item><title>Convert blend files to gltf using a script</title><link>https://geowarin.com/convert-blend-files-to-gltf-using-a-script/</link><pubDate>Tue, 16 Nov 2021 00:44:59 +0100</pubDate><guid>https://geowarin.com/convert-blend-files-to-gltf-using-a-script/</guid><description>Here is how to convert blend files to gltf in one click!</description><content:encoded><![CDATA[<h2 id="scripts">Scripts</h2>
<p>Put this script in your path (e.g.,: <code>~/bin/blend-export</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#78787e">#!/usr/bin/env bash
</span></span></span><span style="display:flex;"><span><span style="color:#78787e"></span>
</span></span><span style="display:flex;"><span><span style="color:#ff5c57">DIR</span><span style="color:#ff6ac1">=</span><span style="color:#ff6ac1">$(</span>dirname <span style="color:#5af78e">&#34;</span><span style="color:#ff5c57">$0</span><span style="color:#5af78e">&#34;</span><span style="color:#ff6ac1">)</span>
</span></span><span style="display:flex;"><span>blender <span style="color:#5af78e">&#34;</span><span style="color:#ff5c57">$1</span><span style="color:#5af78e">&#34;</span> --background -noaudio -P <span style="color:#5af78e">&#34;</span><span style="color:#ff5c57">$DIR</span><span style="color:#5af78e">/blender/to_gltf.py&#34;</span>
</span></span></code></pre></div><p>This refers to a python script that you can put in <code>~/bin/blender/to_gltf.py</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#ff6ac1">import</span> bpy
</span></span><span style="display:flex;"><span><span style="color:#ff6ac1">import</span> os
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>filepath <span style="color:#ff6ac1">=</span> os<span style="color:#ff6ac1">.</span>path<span style="color:#ff6ac1">.</span>basename(bpy<span style="color:#ff6ac1">.</span>data<span style="color:#ff6ac1">.</span>filepath)
</span></span><span style="display:flex;"><span>basepath <span style="color:#ff6ac1">=</span> os<span style="color:#ff6ac1">.</span>path<span style="color:#ff6ac1">.</span>splitext(filepath)
</span></span><span style="display:flex;"><span>output_file_path <span style="color:#ff6ac1">=</span> basepath[<span style="color:#ff9f43">0</span>] <span style="color:#ff6ac1">+</span> <span style="color:#5af78e">&#34;.gltf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>bpy<span style="color:#ff6ac1">.</span>ops<span style="color:#ff6ac1">.</span>export_scene<span style="color:#ff6ac1">.</span>gltf(filepath<span style="color:#ff6ac1">=</span>output_file_path, export_format<span style="color:#ff6ac1">=</span><span style="color:#5af78e">&#34;GLTF_EMBEDDED&#34;</span>)
</span></span></code></pre></div><p>This is straight forward:</p>
<ul>
<li>The bash scripts open a blend file in blender, in the background, and directly executes a script</li>
<li>The script uses the blender api to convert the current scene to gltf</li>
</ul>
<p>Learn more here:</p>
<ul>
<li><a href="https://docs.blender.org/manual/en/latest/advanced/command_line/arguments.html">Blender Command Line Arguments</a></li>
<li><a href="https://docs.blender.org/api/2.93/bpy.ops.export_scene.html?highlight=gltf#bpy.ops.export_scene.gltf">Blender API</a></li>
</ul>
<h2 id="autocomplete">Autocomplete</h2>
<p>A neat trick: you can use the <a href="https://github.com/nutti/fake-bpy-module">fake-bpy-module</a> python module
to get auto-completions in your editor.</p>
<p>On arch linux, you can find this <a href="https://aur.archlinux.org/packages/python-fake-bpy-module-2.93">in the AUR</a></p>
<h2 id="thunar">Thunar</h2>
<p>Finally, I like to have this action in my context menu. I can even convert
a bunch of blend files in on click.</p>
<figure>
    <img loading="lazy" src="images/thunar.gif"/> 
</figure>

<p>To do this, go in the <code>Edit &gt; Configure custom actions</code> menu and add a new entry.</p>
<figure>
    <img loading="lazy" src="images/thunar-action.png"/> 
</figure>

<p>Basics</p>
<ul>
<li>Name: blend to gltf</li>
<li>Command: <code>for file in %F; do /home/geo/bin/blend-export &quot;$file&quot;; done</code></li>
</ul>
<p>Appearance condition</p>
<ul>
<li>File Pattern: <code>*.blend</code></li>
<li>Appears if selections contains: other files</li>
</ul>
<p>You can find this <a href="https://github.com/geowarin/dotfiles-linux/blob/main/.config/Thunar/uca.xml">in my dotfiles</a>.</p>
]]></content:encoded></item></channel></rss>