<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Geowarin</title><link>https://geowarin.github.io/categories/docker/</link><description>Recent content in docker on Geowarin</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 12 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://geowarin.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Build a Docker image of your Spring Boot app</title><link>https://geowarin.github.io/build-a-docker-image-of-your-spring-boot-app/</link><pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate><guid>https://geowarin.github.io/build-a-docker-image-of-your-spring-boot-app/</guid><description>If you like having a self-contained application as a deliverable for your project, the idea of putting your Spring applications in a Docker container might be appealing to you.
In this article, I will show you a simple way to make a docker image the output of your Gradle build, thanks to the gradle-docker plugin.
The code that we will build is a simple console application powered by Spring Boot that will periodically write Chuck Norris facts to the standard output.</description></item></channel></rss>